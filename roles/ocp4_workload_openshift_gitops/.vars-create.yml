---
cloud_provider: none
env_type: ocp-workloads

ocp_workloads:
  - ocp4_workload_openshift_gitops

target_host:
  ansible_host: bastion.kd6jd.sandbox2399.opentlc.com
  ansible_port: 22
  ansible_user: lab-user
  ansible_ssh_private_key_file: ~/.ssh/opentlc_id_rsa

guid: test
# ocp4_workload_authentication_htpasswd_user_password: openshift

# -------------------------------------------------------------------
# ocp4_workload_openshift_gitops
# -------------------------------------------------------------------
# -------------------------------------------------------------------
# ocp4_workload_openshift_gitops
# -------------------------------------------------------------------
ocp4_workload_openshift_gitops_channel: gitops-1.7
ocp4_workload_openshift_gitops_setup_cluster_admin: true

ocp4_workload_openshift_gitops_use_catalog_snapshot: true
ocp4_workload_openshift_gitops_catalogsource_name: redhat-operators-snapshot-gitops
ocp4_workload_openshift_gitops_catalog_snapshot_image: quay.io/gpte-devops-automation/olm_snapshot_redhat_catalog
ocp4_workload_openshift_gitops_catalog_snapshot_image_tag: v4.12_2023_02_27

ocp4_workload_openshift_gitops_update_resources: true
ocp4_workload_openshift_gitops_controller_update: true
ocp4_workload_openshift_gitops_controller_requests_cpu: "2"
ocp4_workload_openshift_gitops_controller_requests_memory: 4Gi
ocp4_workload_openshift_gitops_controller_limits_cpu: "4"
ocp4_workload_openshift_gitops_controller_limits_memory: 4Gi

ocp4_workload_openshift_gitops_repo_update: true
ocp4_workload_openshift_gitops_repo_requests_cpu: 500m
ocp4_workload_openshift_gitops_repo_requests_memory: 512Mi
ocp4_workload_openshift_gitops_repo_limits_cpu: "2"
ocp4_workload_openshift_gitops_repo_limits_memory: 2Gi

ocp4_workload_openshift_gitops_update_route_tls: true
ocp4_workload_openshift_gitops_resource_customizations: |
  operators.coreos.com/Subscription:
    health.lua: |
      health_status = {}
      if obj.status ~= nil then
        if obj.status.conditions ~= nil then
          numDegraded = 0
          numPending = 0
          msg = ""
          for i, condition in pairs(obj.status.conditions) do
            msg = msg .. i .. ": " .. condition.type .. " | " .. condition.status .. "\n"
            if condition.type == "InstallPlanPending" and condition.status == "True" then
              numPending = numPending + 1
            elseif (condition.type == "InstallPlanMissing" and condition.reason ~= "ReferencedInstallPlanNotFound") then
              numDegraded = numDegraded + 1
            elseif (condition.type == "CatalogSourcesUnhealthy" or condition.type == "InstallPlanFailed") and condition.status == "True" then
              numDegraded = numDegraded + 1
            end
          end
          if numDegraded == 0 and numPending == 0 then
            health_status.status = "Healthy"
            health_status.message = msg
            return health_status
          elseif numPending > 0 and numDegraded == 0 then
            health_status.status = "Progressing"
            health_status.message = "An install plan for a subscription is pending installation"
            return health_status
          else
            health_status.status = "Degraded"
            health_status.message = msg
            return health_status
          end
        end
      end
      health_status.status = "Progressing"
      health_status.message = "An install plan for a subscription is pending installation"
      return health_status
# -------------------------------------------------------------------

ACTION: create

# passwd hRAbwC4UVMJV
